                    Background        Tissue Microarrays TMAs first introduced in  are        collections of hundreds of tissue cores arrayed into a        single paraffin histology block     Each TMA block can        be sectioned and mounted onto glass slides producing        hundreds of nearlyidentical slides TMAs permit        investigators to use a single slide to conduct controlled        studies on large cohorts of tissues using a small amount        of reagent The source of tissue is only restricted by its        availability in paraffin and ranges from cores of embedded        cultured cells to tissues from any higher organism In a        typical TMA study every TMA core is associated with a rich        variety of data elements image tissue diagnosis patient        demographics or other biomaterial description quantified        experimental results Under ideal circumstances a single        paraffin TMA block can be sectioned into nearly identical        glass slides dispensed to many different laboratories        These laboratories may use different experimental        protocols They may capture data using different        instruments different databases different data        architectures different data elements and immensely        different formats These laboratories could vastly increase        the value of their experimental findings if they could        merge their findings with those of the other laboratories        that used the same TMA block Unfortunately the practice        of merging TMA data sets obtained at different laboratories        using different information systems is infrequently        practiced A key barrier to this process is the        incompatibility of the individual data sets There simply        is no specification for exchanging TMA data Without such a        specification TMA data files can not be shared or merged        and the full scientific value of this new technology is not        realized        The need for a data exchange standards is not unique to        TMA experiments The same issues have challenged scientists        who use another array technology gene expression arrays        The history of MIAME minimum information about a        microarray experiment and MGED microarray gene expression        databases Standards has been described       XML was        chosen as the formatting language for the effort to        standardize gene expression data The purpose of XML is to        eliminate barriers to data exchange and permit the        integration of data from heterogeneous sources             Consequently a TMA specification in XML would provide        another level of biomedical data integration in which array        data of many different types can be combined and        analyzed        In the past five years XML has emerged as the document        format used in almost all new data standards XML achieves        its functionality through the use of metadata Metadata is        data that describes things including data elements In XML        documents most metadata is marked by enclosing sets of        angle brackets        birthdateJan  birthdate        In this example birthdate is the metadata that        describes and flanks Jan   Besides providing        metadata to describe the data elements contained in the XML        file XML files can be selfdescribed by metadata        Selfdescription is a simple but powerful concept If a        file describes itself its subject its creator its        semantics and all its data elements it can exist as a        completely independent data object unassociated with any        software applications or database instrument There is an        abundance of freely available software implementations        written in a variety of open source programming languages        that permit users to validate and parse XML data files                   The metadata in XML files can be formalized as        welldefined common data elements whose definition and        usage semantics are explicitly described in an accessible        unique document Most efforts that create an XML        specification for data domains such as gene expression        data will also produce a formal document for the metadata        XML tags included in the specification Anyone wishing to        implement the specification would need to understand the        metadata definitions and refer to the metadata definition        document from their XML data files The standard guidelines        for creating metadata specifications is the ISO                               Methods                  Organization and sponsoring agencies          The Association for Pathology Informatics API is an          organization whose mission is to promote the field of          pathology informatics as an academic and a clinical          subspecialty of pathology Further information on the API          is available at their web site          httpwwwpathologyinformaticsorg          The Technical Standards Committee of the API          recognizing the importance of TMA technology to pathology          departments organized a TMA workshop to discuss the          subject of a TMA data exchange specification A          sponsorship listing is contained in Table  The complete          listing of TMA Data exchange workshops is found in Table                    The first community discussion was held May            at the Automated Information Management in the Clinical          Laboratory meeting held at the University of Michigan          and organized by Dr Bruce Friedman The complete listing          of TMA Data exchange workshops is found in Table           Workshop attendees endorsed an effort by the Technical          Standards Committee of the API to create a TMA data          exchange specification Consensus was reached on the          following guiding principles and has been documented in          a public domain workshop summary available at          httpjjbtmasumhtm           The standard should be free and          nonproprietary           The standard should be selfdescriptive Anyone          reviewing a TMA file should be able to precisely          determine how the data is organized by reading the data          tags included in the file           The standard should when feasible use publicly          available common data elements linked to a web site that          fully defines each common data element included in the          standard needed to support datasetindependent          distributed network queries This means that the          committee that creates the TMA standard must work with          other standards committees to ensure crossdatabase          compatibility of common data elements           The standard should be generic able to describe          any laboratorys TMA data structure           The standard should be extensible This means that          there will need to be a standards committee that can make          changes in the standard over time and that can keep a          documented history of modifications in the standard           The standard should be easy to implement It should          be relatively easy for a programmer to translate any          commercial TMA dataset into the TMA standard and to          reverse the process           The standard should not be a requirement The          committee that creates the standard should take no          measure to require laboratories to implement the          standard Those using the standard would be able to          choose that data that is included in their shared          datasets eg they may choose to withold or encrypt          patient identifiers           The standard should have community buyin          Laboratories commercial vendors pathology          organizations government agencies and other standards          committees should all have the opportunity to comment on          the standards          Subsequent workshops affirmed the guidelines          established in the first conference but plans to develop          a formal standard approved by a Standards Organization          were abandoned in favor of developing a          communitysupported TMA specification The specification          would conform to preexisting standards for creating XML          vocabularies and wellformed XML documents This strategy          would produce a new specification as a standard metadata          document see Discussion The current draft          specification complies with guidelines formulated during          the first workshop and the CDEs and TMA data structure          conform with all subsequent recommendations from workshop          participants The workshops themselves were composed of          representatives from academia industry and government          About  people were present at each workshop                            Results                  The data structure          Every TMA file is an XML file that is divided into           sections           A header section with data elements that provides          basic information about the file creator date created          etc The header elements are taken directly from the          Dublin Core a set of specification elements used in          libraries throughout the world to index electronic          information files httpdublincoreorg           A block section with data elements that describe          the TMA block how many cores how large are cores how          are the cores arrayed in the block etc           A slide section with data elements that describe          the slides prepared from the TMA block how are the          slides stored how are they identified etc           A core section with data elements that describe          each of the cores in the TMA block what case did the          core come from what block from the case was used to make          the core what drillsite in the block was used what was          the diagnosis of the drillsite what clinical history is          associated with the core what demographic information is          associated with the patient from whom the core was taken          etc This section is by far the longest section with          wellannotated data for every core in the TMA array                          The data elements          Common Data Elements CDEs are welldefined XML          metadata tags that can be used to consistenly describe          data in different XML files Eighty CDEs were created to          describe the kinds of data contained in a TMA file These          data elements are listed in Table  Each data element is          fully described as a set of features conforming to the          ISO standard for metadata     The CDE          descriptor file is included as an attachment to this          article see Additional file  The most current          descriptor file for the TMA CDEs can be found as a public          document at          Additional File                     TMA Common Data Elements HTML file of          each data element from Table annotated with metadata          descriptors tmacdehtm          Click here for file          httpjjbtmacdehtm          This web address is the Unique Resource Identifier          URI for the TMA CDEs XML files that use any of the TMA          CDEs can refer to the URI ensuring that anyone          encountering the CDE will understand its intended meaning                        Two example CDEs from the descriptor file are shown          Each CDE is followed by a basic set of information as          specified in ISO that fully describes the CDE TMA          files may refer directly to the URL as a namespace          reference for the TMA CDEs                      slidetestdate                     Identifier slidetestdate          Version           Registration Authority Association for Pathology          Informatics          Language English en          Obligation Optional          Datatype Date YYYYMMDD          Maximum Occurrence Unlimited          Definition This is the date that the slide was          stained it should be expressed in integers as          YYYYMMDD                      slidetestcategory                     Identifier slidetestcategory          Version           Registration Authority Association for Pathology          Informatics          Language English en          Obligation Optional          Datatype Character String          Maximum Occurrence Unlimited          Definition This is the type of special study applied          to this slide eg FISH          Immunohistochemistry in situ PCR BLOT regular          stain other                          Semantic rules for the TMA data exchange          specification          Six semantic rules define the TMA Data Exchange          Specification The specification refers to CDEs listed in          Table            The TMA file must consist of wellformed XML           Every TMA file must have histo as its root          element           Every TMA file must have header tma block slide          and core element sections           The tma element is nested under the root element          histo The header and block elements are nested under the          tma element The slide and core elements are nested under          the block element but are not nested within each          other           The header elements are the Dublin Core elements          and provide general information about the file and the          laboratory that produced the file The header section          must be the first TMA CDE nested under the tma          element           Elements that begin with block slide or core          are nested by the hierarchy contained in their name and          separated by underscores          This approach gives the TMA creators enormous          flexibility while still providing a rich set of metadata          and a uniform data structure           The semantics of every TMA data exchange file can          be entirely specified by six semantic rules that can be          understood by nonprogrammers           Users of the specification can add tags of their          own creation and can even add arguments to the list of          CDEs Users are free to add any XML constructs they wish          DTDs Schemas Entities nonparsed data RDF          references attributes etc Namespace prefixes are          allowed           The only TMA CDEs XML tags required in every TMA          document are histo header tma block slide and core          There are no data inclusion requirements so a valid TMA          file may consist exclusively of XML tags           The six semantic rules are easy to model in          validating software implementations A Perl script          tmavalidpl for validating TMA data exchange files is          included as a supplemental attachment with this          publication           The six semantic rules provide enough data          structure and metadata to for TMA users to design          understandable and parsable TMA documents           The six semantic rules and the CDEs can be referred          to from URIs within the TMA documents so that TMA          documents can be selfdescriptive                          Examples of valid TMA data exchange files                      Examplexml            histo            tma            header            header            block            slide            slide            core            core            block            tma            histo            The specification does not require that XML tags            actually enclose data Example  consisting only of            tags is a wellformed TMA file Only the minimal            required CDEs are contained histo header tma            block slide and core Note that histo is the root            element The tma file nests under histo A single TMA            file may include several tma tags allowing a            collection of many different TMA data sets in a single            document The header section nests under tma            Typically the header section will contain the Dublin            Core elements The header section when populated by            all the Dublin Core header elements will permit            indexing services libraries publishers and anyone            examining the TMA document to easily determine the            basic identifying information about the file who made            the file what is the file when was the file made            where was it made etc                                Examplexml            histo            myowntag            myowntag            tma            header            font            font            header            block            slide            slide            core            secrettag            secrettag            core            core name  liver            core            slide            slide            block            tma            histo            Example  is also valid Notice that several of the            tags do not match CDEs found in Table  This is            permitted Also an attribute was added for core a            required TMA element The attribute is not part of the            TMA specification The TMA validator ignores elements            and attributes added by the user                                Examplexml invalid structure            HISTO            tma            block            header            header            slide            slide            core            core            block            tma            HISTO            In Example  there are two errors The HISTO            element is in uppercase As in all XML elements tags            are case sensitive and the root element histo must            appear as lowercase Additionally the header element            is nested under the block element There are very few            nesting rules in the TMA specification but the            specification requires a separate section for header            and for block The header tag must be the first TMA            CDE following the tma tag Users may add their own            tags that precede the header tag after the tma tag            NonCDE tags are tags that are not included in Table             and are simply ignored by the TMA validator The block            element may contain only block slide and core            CDEs                                Examplexml            Example  illustrates use of the selfdescribing            nesting hierarchy of CDEs taken from Table  In this            example values for several of the tags are added            histo            tma            header            TitleAllPurpose Tissue            ArrayTitle            header            block                        blockidentifierblockidentifier            slide                        slideidentifierslideidentifier            slide            core            corearrayidcorearrayid            corehistorepositoryGeneric Tissue Bank            corehistorepositorydonorblock                        corehistorepositorydonorblockdrillsite                        corehistorepositorydonorblockdrillsitediagnosisbcc                        corehistorepositorydonorblockdrillsitediagnosis                        corehistorepositorydonorblockdrillsite            corehistorepositorydonorblock            corehistorepository            core            block            tma            histo            In Example  there is a hierarchy of core CDEs and            the order of the hierarchy is specified by underscore            characters within each CDE            When run through the Perl validator script            validtmapl Example  produces the following            results consisting of a list of the used tags a            statement that the XML file parsed as a valid TMA file            and an authentication string for the file            Begining to parse exxml now            histo            tma            header            Title            block            blockidentifier            slide            slideidentifier            core            corearrayid            corehistorepository            corehistorepositorydonorblock            corehistorepositorydonorblockdrillsite                        corehistorepositorydonorblockdrillsitediagnosis            Finished exxml is a valid Tissue Microarray            File            The oneway hash of your file is            bbaacdffcad            TMA CDEs beginning with block core or slide and            containing underscore characters contain a            selfdescribing hierarchical XML nesting pattern                                    corehistorepositorydonorblockdrillsitediagnosis             nested under                                    corehistorepositorydonorblockdrillsite             nested under                        corehistorepositorydonorblock             nested under                        corehistorepository  nested            under                          core                         This means that once an hierarchical TMA CDE from            Table is chosen the user is committed to include the            ancestor CDEs In the case of the CDE            corerepositorydonorblockdrillsitediagnosis the            ancestors shown above would need to be included in the            TMA file with nesting as shown in Example  As always            the insertion of usercreated elements is ignored by            the validator even when those elements interrupt a            nested hierarchy The Perl script for the TMA validator            is included as an attachment file with this article            see Additional file             Additional File                         TMA Validator Perl Script for            validating TMA files with the TMA Data Exchange            Specification validtmapl            Click here for file                                      Discussion        Data Exchange Specifications are written so that        databases related to a specific data domain may be designed        with common data and common data structures Standards are        now available for creating XML documents    and CDEs            Data exchange specifications that conform to XML and        CDE standards and receive support from the user community        become powerful research devices The availability of large        numbers of TMA files conforming to the data exchange        specification will permit the interlaboratory comparison        of TMA data and the integration of TMA data with data from        other biological databases Researchers will be able to        submit their TMA data as supplemental files with their        research publications so that reviewers and readers can        examine the original research data Because the        specification provides a way to produce a selfdescribing        file it would be a simple matter to port the data from TMA        files into virtually any commercial or open source        database        Specifications are only adopted when they fill the needs        of a heterogeneous user community     The community of        TMA users includes pathologists research scientists        informaticians commercial tissue repositories and journal        editors In order to develop a set of standards that will        appeal to all these groups the TMA Data Exchange        specification was developed in a series of open workshops        One of the early concerns was that advances in TMA        technology would be stifled by a rigid standard containing        a list of required Common Data Elements and a required data        structure A second concern was expressed by researchers        who were using proprietary database implementations These        participants wanted the freedom to add proprietary data        elements to TMA exchange documents without violating the        specification They also indicated that they required a        loose data structure that could be easily reconstructed        from their own databases        The most common way of specifying properties of an XML        document is through a a DTD Data Type Definition or a        Schema      In fact the workshops considered several        versions of a DTD without obtaining approval at any of the        workshops The groups emphasis on flexibility and open        design of the specification particularly the requirement        that users be allowed to add their own tags made writing a        DTD difficult The spectrum of workshop participants which        included pathologists imaging experts and tissue bankers        was not particularly focused on the technicalities of XML        We fully expect that users will eventually move toward a        DTD or schema to support the TMA specification        The current draft of the TMA Data Exchange specification        satisfies user requests for maximum flexibility With        freedom comes responsibility It is quite possible to        design a TMA data file that conforms to the TMA data        exchange specification but lacks annotational detail Of        the eighty TMA CDEs in Table  only six are required A        TMA that lacks detailed identifying information for blocks        slides cores and images may pass inspection by the        validator but it would be of little scientific value        Similarly a TMA that lacks a full set of header        information Title Creator Subject and Keywords        Description etc cannot be sensibly indexed or shared        Depending on comments from implementers the specification        may need to expand the number of required CDEs        Those who wish to use the specification will need short        programs that map their preexisting database elements over        to the equivalent data elements of the TMA Data Exchange        specification The programs will need to adhere to the        general XML structure described in this paper For elements        with no corresponding listing in the specification        researchers will be expected to create their own metadata        tags for their TMA files It is hoped that TMA files will        soon be available to the public as supplemental attachments        to journal submissions This means that researchers will        need to exclude identifying information from shared TMA        files These considerations place additional burdens on        researchers The TMA Data Exchange Specification provides        software programmers with a promising new area for        development                    Conclusion        The TMA data exchange specification is now available in        a draft form with communityapproved Common Data Elements        and communityapproved general file format and structure        The specification can be freely used by the scientific        community It is designed to be independent of the source        of the data including the source of the tissue the        experimental protocol the imaging modality the data        capture method and the schema for internal storage The        metadata file of fully described TMA CDEs tmacdehtm and        a Perl implementation of the validator validtmapl are        attached as supplemental files with this article Efforts        sponsored by the Association for Pathology Informatics to        establish a TMA data exchange specification are expected to        continue for several more years The interested public is        invited to participate in these efforts                    Author Contributions        Dr Berman wrote the first draft of the article and        wrote the Perl validator for the current TMA specification        draft chairs the API Technical Standards Committee that        launched the TMA data exchange specification and chaired        the first TMA Data Exchange discussion held at the U of        Michigan AIMCL meeting May   Dr Mary Edgerton        wrote the first draft of TMA common data elements helped        design the TMA data structure Dr Edgerton was Principal        Investigator for the National Cancer Institute grant R        CA supporting the TMA workshops and chaired three        of the four TMA data exchange specification workshops Dr        Friedman is the current President of API and conceived the        idea of a series of communitybased workshops to further        TMA informatics Dr Friedman helped plan organize and        arrange funding for the TMA informatics workshops Dr        Friedman has reviewed and corrected all drafts of the        article        None of the authors have any financial interest in this        article or in the TMA data exchange specification            